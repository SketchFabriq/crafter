<launch>

  <arg name="robot_model" default="locobot_wx250s" />
  <arg name="robot_name" default="locobot" />
  <arg name="arm_model" default="$(eval 'mobile_' + arg('robot_model').split('_')[1])" />
  <arg name="show_lidar" default="true" />
  <arg name="show_gripper_bar" default="true" />
  <arg name="show_gripper_fingers" default="true" />
  <arg name="external_urdf_loc" default="" />
  <arg name="external_srdf_loc" default="" />
  <arg name="use_rviz" default="false" />
  <arg name="rviz_frame" default="$(arg robot_name)/base_footprint" />
  <arg name="world_name" default="$(find locobot_connector)/worlds/cube_world.world" />
  <arg name="gui" default="true" />
  <arg name="debug" default="false" />
  <arg name="paused" default="false" />
  <arg name="recording" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="use_position_controllers" default="false" />
  <arg name="use_trajectory_controllers" default="true" />
  <arg name="dof" default="6" />
  <arg name="use_moveit" default="true" />
  <arg name="mode_configs"
    default="$(find interbotix_xslocobot_moveit_interface)/config/modes_all.yaml" />
  <arg name="use_moveit_rviz" default="true" />
  <arg name="use_cpp_interface" default="false" />
  <arg name="moveit_interface_gui" default="true" />
  <arg name="use_python_interface" default="false" />


  <env name="GAZEBO_RESOURCE_PATH" value="$(find interbotix_xslocobot_gazebo)" />

  <rosparam file="$(find interbotix_xslocobot_gazebo)/config/locobot_gazebo_controllers.yaml"
    command="load" ns="$(arg robot_name)" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="recording" value="$(arg recording)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
  </include>

  <group if="$(eval robot_model != 'locobot_base')">

    <group if="$(arg use_trajectory_controllers)">
      <rosparam
        file="$(find interbotix_xslocobot_gazebo)/config/trajectory_controllers/$(arg arm_model)_trajectory_controllers.yaml"
        command="load" ns="$(arg robot_name)" />
      <node
        name="controller_spawner"
        pkg="controller_manager"
        type="controller_manager"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="spawn arm_controller gripper_controller pan_controller tilt_controller joint_state_controller" />
    </group>

    <group if="$(arg use_position_controllers)">
      <rosparam
        file="$(find interbotix_xslocobot_gazebo)/config/position_controllers/$(arg arm_model)_position_controllers.yaml"
        command="load" ns="$(arg robot_name)" />

      <node if="$(eval dof == 4)"
        name="controller_spawner"
        pkg="controller_manager"
        type="controller_manager"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="spawn joint_state_controller waist_controller shoulder_controller
                      elbow_controller wrist_angle_controller left_finger_controller
                      right_finger_controller pan_controller tilt_controller" />

      <node if="$(eval dof == 5)"
        name="controller_spawner"
        pkg="controller_manager"
        type="controller_manager"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="spawn joint_state_controller waist_controller shoulder_controller
                      elbow_controller wrist_angle_controller wrist_rotate_controller
                      left_finger_controller right_finger_controller pan_controller
                      tilt_controller" />

      <node if="$(eval dof == 6)"
        name="controller_spawner"
        pkg="controller_manager"
        type="controller_manager"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="spawn joint_state_controller waist_controller shoulder_controller
                      elbow_controller forearm_roll_controller wrist_angle_controller
                      wrist_rotate_controller left_finger_controller right_finger_controller
                      pan_controller tilt_controller" />
    </group>

  </group>

  <node unless="$(eval robot_model != 'locobot_base')"
    name="controller_spawner"
    pkg="controller_manager"
    type="controller_manager"
    respawn="false"
    output="screen"
    ns="$(arg robot_name)"
    args="spawn pan_controller tilt_controller joint_state_controller" />

  <include file="$(find interbotix_xslocobot_descriptions)/launch/xslocobot_description.launch">
    <arg name="robot_model" value="$(arg robot_model)" />
    <arg name="robot_name" value="$(arg robot_name)" />
    <arg name="show_lidar" value="$(arg show_lidar)" />
    <arg name="model" value="/home/vscode/ros_ws/visioncraft/envs/assets/locobot/locobot_full.urdf" />
    <arg name="show_gripper_bar" value="$(arg show_gripper_bar)" />
    <arg name="show_gripper_fingers" value="$(arg show_gripper_fingers)" />
    <arg name="external_urdf_loc" value="$(arg external_urdf_loc)" />
    <arg name="use_rviz" value="$(arg use_rviz)" />
    <arg name="rviz_frame" value="$(arg rviz_frame)" />
  </include>

  <node
    name="urdf_spawner"
    pkg="gazebo_ros"
    type="spawn_model"
    respawn="false"
    output="screen"
    ns="$(arg robot_name)"
    args="-urdf -model $(arg robot_name) -param robot_description" />

  <group if="$(arg use_moveit)">

    <include file="$(find interbotix_xslocobot_moveit)/launch/xslocobot_moveit.launch">
      <arg name="robot_model" value="$(arg robot_model)" />
      <arg name="robot_name" value="$(arg robot_name)" />
      <arg name="show_lidar" value="$(arg show_lidar)" />
      <arg name="external_urdf_loc" value="$(arg external_urdf_loc)" />
      <arg name="external_srdf_loc" value="$(arg external_srdf_loc)" />
      <arg name="mode_configs" value="$(arg mode_configs)" />
      <arg name="use_gazebo" value="false" />
      <arg name="use_actual" value="false" />
      <arg name="use_fake" value="false" />
      <arg name="dof" value="$(arg dof)" />
      <arg name="use_camera" value="true" />
      <arg name="use_moveit_rviz" value="$(arg use_moveit_rviz)" />
      <arg name="world_name" value="$(arg world_name)" />
    </include>

    <group if="$(arg use_cpp_interface)">

      <node
        name="moveit_interface"
        pkg="interbotix_moveit_interface"
        type="moveit_interface"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)" />

      <node if="$(arg moveit_interface_gui)"
        name="moveit_interface_gui"
        pkg="interbotix_moveit_interface"
        type="moveit_interface_gui"
        output="screen"
        ns="$(arg robot_name)" />

    </group>

    <node if="$(arg use_python_interface)"
      name="moveit_python_interface"
      pkg="interbotix_moveit_interface"
      type="moveit_python_interface"
      respawn="false"
      output="screen"
      ns="$(arg robot_name)">
      <rosparam command="load"
        file="$(find interbotix_xslocobot_moveit_interface)/config/$(arg robot_model).yaml" />
      <param name="robot_model" value="$(arg robot_model)" />
      <remap from="/attached_collision_object" to="/$(arg robot_name)/attached_collision_object" />
      <remap from="/collision_object" to="/$(arg robot_name)/collision_object" />
    </node>
  </group>

</launch>